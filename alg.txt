for each particle i = 1, ..., S do
  Initialize the particle's position with a uniformly distributed random vector: xi ~ U(blo, bup)
  Initialize the particle's best  position to its initial position: pi ← xi
  if f(pi) < f(g) then
    update the swarm's best   position: g ← pi
  Initialize the particle's velocity: vi ~ U(-|bup-blo|, |bup-blo|)
while a termination criterion is not met do:
  for each particle i = 1, ..., S do
    for each dimension d = 1, ..., n do
      Pick random numbers: rp, rg ~ U(0,1)
      Update the particle's velocity: vi,d ← ω vi,d + φp rp (pi,d-xi,d) + φg rg (gd-xi,d)
    Update the particle's position: xi ← xi + vi
    if f(xi) < f(pi) then
      Update the particle's best  position: pi ← xi
        if f(pi) < f(g) then
          Update the swarm's best  position: g ← pi